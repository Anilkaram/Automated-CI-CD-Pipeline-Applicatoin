pipeline {
	agent {
	    label 'docker'
	}
	environment {
	    scannerHome = tool 'mysonar';
	}
	stages {
	    stage ('clean ws') {
	        steps {
                cleanWs()	            
            }
	    }
	    stage ('code') {
            steps {
                git 'https://github.com/Anilkaram/Zomato-Project.git'
            }
        }
        stage ('CQA') {
            steps {
                script{
                    withSonarQubeEnv('mysonar') {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }
        stage ('quality gate') {
            steps {
                waitForQualityGate abortPipeline: false, credentialsId: 'sonar'
            }
        }
        stage ('image') {
            steps {
                sh 'docker build -t anildoc143/zomato:v1 .'
            }
        }
        stage ('trivy') {
            steps {
                sh 'trivy image anildoc143/zomato:v1'
            }
        }
        stage ('hub') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-pass') {
                    sh 'docker push anildoc143/zomato:v1'
                    }
                }
            }
        }
        stage ('stack') {
	        steps {
	            sh 'docker stack deploy zomato --compose-file=docker-compose.yml'
	        }
	    }
    }
    post {
        always {
            slackSend channel: 'zomato', message: 'Hi, there, pipeline is been successed', teamDomain: 'Wipro-Anil', tokenCredentialId: 'slack', username: 'jenkins'
        }
        success {
            echo "pipeline is successed"
        }
        failure {
            echo "pipeline is failed"
        }
        aborted {
            echo "pipeline is been cancelled"
        }
    }
}

